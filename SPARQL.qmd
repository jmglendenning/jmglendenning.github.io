---
title: "SPARQL"
---

# Endpoint

[Nomisma SPARQL Endpoint](https://nomisma.org/sparql/)

# Headers / Prefixes

Remember to add all these **PREFIX** to the SPARQL queries.

```
PREFIX crm:	<http://www.cidoc-crm.org/cidoc-crm/>
PREFIX dcmitype: <http://purl.org/dc/dcmitype/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX nm: <http://nomisma.org/id/>
PREFIX nmo: <http://nomisma.org/ontology#>
PREFIX org: <http://www.w3.org/ns/org#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
```

# Sample Queries

## Example 1

Modified from R networks analysis / works

```
SELECT DISTINCT ?hoard ?mint ?mintlat ?mintlong WHERE {
{
  ?hoard void:inDataset <http://numismatics.org/chrr/> ;
  dcterms:tableOfContents/nmo:hasTypeSeriesItem/nmo:hasMint ?mint .
}
UNION
{ ?hoard a nmo:Hoard ;
dcterms:tableOfContents [ nmo:hasTypeSeriesItem ?tsi ] .
?tsi nmo:hasMint ?mint .
}
OPTIONAL { ?hoard nmo:hasFindspot [
geo:lat ?hoardlat ;
geo:long ?hoardlong ] }
OPTIONAL { ?mint geo:location [
geo:lat ?mintlat ;
geo:long ?mintlong ] }
}
```

## Example 2

```
PREFIX crm:   <http://www.cidoc-crm.org/cidoc-crm/>
PREFIX dcterms:<http://purl.org/dc/terms/>
PREFIX foaf:  <http://xmlns.com/foaf/0.1/>
PREFIX geo:   <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX nm:    <http://nomisma.org/id/>
PREFIX nmo:   <http://nomisma.org/ontology#>
PREFIX rdfs:  <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos:  <http://www.w3.org/2004/02/skos/core#>

SELECT DISTINCT
  ?hoard ?hoardID
  ?type (COALESCE(?tlabel, ?plabel, ?rlabel, ?flabel) AS ?typeLabel)
  (STR(?startDate) AS ?startYear)
  (STR(?endDate)   AS ?endYear)
  ?denomination ?denominationLabel
  ?material     ?materialLabel
  ?mint ?mintID
  ?hoardLat ?hoardLong
  ?mintLat  ?mintLong
WHERE {
  # --- All CHRR hoards and their contents ---
  ?hoard a nmo:Hoard ;
         dcterms:tableOfContents ?contents .
  FILTER(STRSTARTS(STR(?hoard), "http://numismatics.org/chrr/id/"))
  BIND(REPLACE(STR(?hoard), "http://numismatics.org/chrr/id/", "") AS ?hoardID)

  # --- Mint (via type-series item or directly on contents) ---
  {
    ?contents nmo:hasTypeSeriesItem ?type .
    ?type     nmo:hasMint ?mint .
  }
  UNION
  {
    ?contents nmo:hasMint ?mint .
    OPTIONAL { ?contents nmo:hasTypeSeriesItem ?type }
  }
  BIND(REPLACE(STR(?mint), "http://nomisma.org/id/", "") AS ?mintID)

  # --- Type labels & dates (from CRRO type, when present) ---
  OPTIONAL { ?type dcterms:title    ?tlabel  FILTER(LANG(?tlabel)  = "" || LANGMATCHES(LANG(?tlabel),  "en")) }
  OPTIONAL { ?type skos:prefLabel   ?plabel  FILTER(LANG(?plabel) = "" || LANGMATCHES(LANG(?plabel), "en")) }
  OPTIONAL { ?type rdfs:label       ?rlabel  FILTER(LANG(?rlabel)  = "" || LANGMATCHES(LANG(?rlabel),  "en")) }
  OPTIONAL { ?type foaf:name        ?flabel  FILTER(LANG(?flabel)  = "" || LANGMATCHES(LANG(?flabel),  "en")) }

  OPTIONAL { ?type nmo:hasStartDate ?startDate }
  OPTIONAL { ?type nmo:hasEndDate   ?endDate }

  # --- Denomination & material (from type) ---
  OPTIONAL {
    ?type nmo:hasDenomination ?denomination .
    OPTIONAL {
      ?denomination (skos:prefLabel|rdfs:label|foaf:name) ?denominationLabel .
      FILTER(LANG(?denominationLabel) = "" || LANGMATCHES(LANG(?denominationLabel), "en"))
    }
  }
  OPTIONAL {
    ?type nmo:hasMaterial ?material .
    OPTIONAL {
      ?material (skos:prefLabel|rdfs:label|foaf:name) ?materialLabel .
      FILTER(LANG(?materialLabel) = "" || LANGMATCHES(LANG(?materialLabel), "en"))
    }
  }

  # --- Mint geolocation (Nomisma places) ---
  OPTIONAL {
    { ?mint geo:location [ geo:lat ?mintLat ;  geo:long ?mintLong ] }
    UNION
    { ?mint geo:lat ?mintLat . ?mint geo:long ?mintLong }
  }

  # --- Hoard geolocation (several fallbacks common in CHRR) ---
  OPTIONAL {
    # A) Direct findspot place with geo
    { ?hoard nmo:hasFindspot ?hPlace .
      { ?hPlace geo:location [ geo:lat ?hoardLat ; geo:long ?hoardLong ] }
      UNION
      { ?hPlace geo:lat ?hoardLat . ?hPlace geo:long ?hoardLong }
    }
    UNION
    # B) CRM region chain with geo
    {
      ?hoard nmo:hasFindspot [
        crm:P7_took_place_at [
          crm:P89_falls_within ?region
        ]
      ] .
      ?region geo:location ?spatialThing .
      ?spatialThing geo:lat ?hoardLat ; geo:long ?hoardLong .
    }
    UNION
    # C) dcterms:spatial to a place with geo
    {
      ?hoard dcterms:spatial ?hPlace2 .
      { ?hPlace2 geo:location [ geo:lat ?hoardLat ; geo:long ?hoardLong ] }
      UNION
      { ?hPlace2 geo:lat ?hoardLat . ?hPlace2 geo:long ?hoardLong }
    }
  }
}
ORDER BY ?hoardID ?typeLabel ?type ?mint
```
