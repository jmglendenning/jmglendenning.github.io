[
  {
    "objectID": "project01.html",
    "href": "project01.html",
    "title": "Project - Brainstorming",
    "section": "",
    "text": "Background\nMoses Finley’s The Ancient Economy (1973) challenged traditional views of ancient economies, particularly those of Greece and Rome. Finley argued that ancient economies were fundamentally different from modern capitalist systems and should not be analyzed using modern economic concepts.\nSince publication, there have been some shifting thoughts on the inequalities of ancient Rome. This project will be designed to see if there has been a shift in scholarly publications on inequalities in the Roman economic system.\n\n\nHypothesis\n\\[\n\\begin{flalign}\n\\scriptsize\nH_0&: \\scriptsize  \\text{Scholarship about inequality in ancient Rome has not changed.}\\\\\n\\scriptsize\nH_1&: \\scriptsize  \\text{Scholarship has changed.}\n\\end{flalign}\n\\]\n\n\nData Collection\nInitially, data collection will start with gathering access to scholarly journals related to the ancient Roman Empire. We will start with selected articles from JSTOR from publications such as The Journal of Roman Studies.\n\n\nMethods\n\nJournal Acquisition\n\nAcquire a limited dataset of publications\nPreprocess the data including OCR, tokenization, stemming, etc.\n\nConversion\n\nConvert text to numerical representations\n\nModel Selection & Training\nPost-processing\n\n\n\nStart\nThe first step in the process is to verify that the data can actually be collected. Given the size and time constraints, it may be necessary to limit the scope of data collection to a reasonable, but not exhaustive amount.\nThe book The Ancient Economy has been obtained and OCRed.\nOne paper has been downloaded for examination (Brock, Motta, and Terrenato 2021).\n\n\n\n\n\ngraph TD\n  A[Start] --&gt; B[Load Text Data]\n  B --&gt; C[Preprocessing]\n  C --&gt;|Convert to Lowercase| C1[Lowercasing]\n  C --&gt;|Remove Punctuation| C2[Remove Punctuation]\n  C --&gt;|Remove Stopwords| C3[Stopword Removal]\n  C --&gt;|Stemming/Lemmatization| C4[Stemming/Lemmatization]\n  C --&gt;|Tokenization| C5[Tokenization]\n  C1 --&gt; D[Create Corpus]\n  C2 --&gt; D\n  C3 --&gt; D\n  C4 --&gt; D\n  C5 --&gt; D\n  D --&gt; E[Feature Extraction]\n  E --&gt;|Bag-of-Words| E1[BoW Model]\n  E --&gt;|TF-IDF| E2[TF-IDF Model]\n  E --&gt;|Word Embeddings| E3[Word2Vec, FastText, GloVe]\n  E1 --&gt; F[Train NLP Model]\n  E2 --&gt; F\n  E3 --&gt; F\n  F --&gt;|Classification| G1[Sentiment Analysis, Spam Detection]\n  F --&gt;|Clustering| G2[Topic Modeling, Named Entity Recognition]\n  F --&gt;|Text Generation| G3[Chatbots, Machine Translation]\n  G1 --&gt; H[Evaluate Model]\n  G2 --&gt; H\n  G3 --&gt; H\n  H --&gt; I[Deploy Model]\n  I --&gt; J[End]\n\n\n\n\n\n\n\n\nAlternative Projects to Consider\nSome other projects that could be considered:\n\nPredictive Modeling of Archaeological Site Locations\nAutomated Artifact Classification and Typology\nTemporal and Spatial Analysis of Settlement Patterns\nText Mining and NLP for Archaeological Literature\nReconstructing Ancient Trade Routes\n\n\n\nBibliography\nBrock, Andrea L., Lorenzo Motta, and Nicola Terrenato. 2021. “On the Banks of the Tiber: Opportunity and Transformation in Early Rome.” The Journal of Roman Studies 111: 1–30. https://www.jstor.org/stable/27128849.\nFinley, Moses I. 1973. The Ancient Economy. Berkeley: University of California Press."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I am a Master’s student at the University of Texas at Dallas studying GIS.\nI am interested in applying GIS tools and techniques to historical questions. Projects that I have worked on include:\n\nRoman villa site location analysis and predictive modeling\nA Python implementation of Geomorphons\nApplication of low-cost drones to disaster efforts\nPython-based DEM-based spatial statistics via WCS data-acquisition\n\nI am currently working on analyzing Roman coin hoards.\nI have a strong interest in remote sensing and tools.\nCurriculum vitae"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "John Glendenning",
    "section": "",
    "text": "I am a masters student studying geographical information systems.\n\nContact\njmg220005@utdallas.edu"
  },
  {
    "objectID": "Work.html",
    "href": "Work.html",
    "title": "Work",
    "section": "",
    "text": "Work samples will go here.\n\n\n\nPrincess Donut"
  },
  {
    "objectID": "assignment01.html",
    "href": "assignment01.html",
    "title": "Assignment 01",
    "section": "",
    "text": "Review/refresh R programming:"
  },
  {
    "objectID": "assignment01.html#exercise-1",
    "href": "assignment01.html#exercise-1",
    "title": "Assignment 01",
    "section": "Exercise 1",
    "text": "Exercise 1\nAfter installation, type R.version. What version of R did you install? What is the nickname of that particular software build?\n\nR.version\n\n               _                           \nplatform       aarch64-apple-darwin20      \narch           aarch64                     \nos             darwin20                    \nsystem         aarch64, darwin20           \nstatus                                     \nmajor          4                           \nminor          4.3                         \nyear           2025                        \nmonth          02                          \nday            28                          \nsvn rev        87843                       \nlanguage       R                           \nversion.string R version 4.4.3 (2025-02-28)\nnickname       Trophy Case"
  },
  {
    "objectID": "assignment01.html#exercise-2",
    "href": "assignment01.html#exercise-2",
    "title": "Assignment 01",
    "section": "Exercise 2",
    "text": "Exercise 2\nOpen RStudio. In the console pane (usually at the bottom-left), type 1 + 1 and press Enter. What result do you get?\n\n1+1\n\n[1] 2"
  },
  {
    "objectID": "assignment01.html#exercise-3",
    "href": "assignment01.html#exercise-3",
    "title": "Assignment 01",
    "section": "Exercise 3",
    "text": "Exercise 3\nCreate a new R script (File &gt; New File &gt; R Script). Type print(“Hello, Data Science!”) and run the code. What output do you see in the console?\n\nprint(\"Hello, Data Science!\")\n\n[1] \"Hello, Data Science!\""
  },
  {
    "objectID": "assignment01.html#exercise-4",
    "href": "assignment01.html#exercise-4",
    "title": "Assignment 01",
    "section": "Exercise 4",
    "text": "Exercise 4\nUse pacman to install and load the tidyr package. Then, use p_functions() to list all functions in the tidyr package.\n\nlibrary(pacman)\np_functions(tidyr)\n\n [1] \"%&gt;%\"                      \"all_of\"                  \n [3] \"any_of\"                   \"as_tibble\"               \n [5] \"build_longer_spec\"        \"build_wider_spec\"        \n [7] \"check_pivot_spec\"         \"chop\"                    \n [9] \"complete\"                 \"complete_\"               \n[11] \"contains\"                 \"crossing\"                \n[13] \"crossing_\"                \"drop_na\"                 \n[15] \"drop_na_\"                 \"ends_with\"               \n[17] \"everything\"               \"expand\"                  \n[19] \"expand_\"                  \"expand_grid\"             \n[21] \"extract\"                  \"extract_\"                \n[23] \"extract_numeric\"          \"fill\"                    \n[25] \"fill_\"                    \"full_seq\"                \n[27] \"gather\"                   \"gather_\"                 \n[29] \"hoist\"                    \"last_col\"                \n[31] \"matches\"                  \"nest\"                    \n[33] \"nest_\"                    \"nest_legacy\"             \n[35] \"nesting\"                  \"nesting_\"                \n[37] \"num_range\"                \"one_of\"                  \n[39] \"pack\"                     \"pivot_longer\"            \n[41] \"pivot_longer_spec\"        \"pivot_wider\"             \n[43] \"pivot_wider_spec\"         \"replace_na\"              \n[45] \"separate\"                 \"separate_\"               \n[47] \"separate_longer_delim\"    \"separate_longer_position\"\n[49] \"separate_rows\"            \"separate_rows_\"          \n[51] \"separate_wider_delim\"     \"separate_wider_position\" \n[53] \"separate_wider_regex\"     \"spread\"                  \n[55] \"spread_\"                  \"starts_with\"             \n[57] \"tibble\"                   \"tidyr_legacy\"            \n[59] \"tribble\"                  \"unchop\"                  \n[61] \"uncount\"                  \"unite\"                   \n[63] \"unite_\"                   \"unnest\"                  \n[65] \"unnest_\"                  \"unnest_auto\"             \n[67] \"unnest_legacy\"            \"unnest_longer\"           \n[69] \"unnest_wider\"             \"unpack\""
  },
  {
    "objectID": "assignment01.html#exercise-5",
    "href": "assignment01.html#exercise-5",
    "title": "Assignment 01",
    "section": "Exercise 5",
    "text": "Exercise 5\nCreate a new folder on your computer called “DataScience”. Set this as your working directory in RStudio. Then, use getwd() to confirm it’s set correctly.\nNote: This was done, but running this in Quarto is problematic, so this output is copied from the Console.\n&gt; getwd()\n[1] \"/Users/john/DataScience\""
  },
  {
    "objectID": "SPARQL.html",
    "href": "SPARQL.html",
    "title": "SPARQL",
    "section": "",
    "text": "Nomisma SPARQL Endpoint"
  },
  {
    "objectID": "SPARQL.html#example-1",
    "href": "SPARQL.html#example-1",
    "title": "SPARQL",
    "section": "Example 1",
    "text": "Example 1\nModified from R networks analysis / works\nSELECT DISTINCT ?hoard ?mint ?mintlat ?mintlong WHERE {\n{\n  ?hoard void:inDataset &lt;http://numismatics.org/chrr/&gt; ;\n  dcterms:tableOfContents/nmo:hasTypeSeriesItem/nmo:hasMint ?mint .\n}\nUNION\n{ ?hoard a nmo:Hoard ;\ndcterms:tableOfContents [ nmo:hasTypeSeriesItem ?tsi ] .\n?tsi nmo:hasMint ?mint .\n}\nOPTIONAL { ?hoard nmo:hasFindspot [\ngeo:lat ?hoardlat ;\ngeo:long ?hoardlong ] }\nOPTIONAL { ?mint geo:location [\ngeo:lat ?mintlat ;\ngeo:long ?mintlong ] }\n}"
  },
  {
    "objectID": "SPARQL.html#example-2",
    "href": "SPARQL.html#example-2",
    "title": "SPARQL",
    "section": "Example 2",
    "text": "Example 2\n```PREFIX crm: http://www.cidoc-crm.org/cidoc-crm/ PREFIX dcterms:http://purl.org/dc/terms/ PREFIX foaf: http://xmlns.com/foaf/0.1/ PREFIX geo: http://www.w3.org/2003/01/geo/wgs84_pos# PREFIX nm: http://nomisma.org/id/ PREFIX nmo: http://nomisma.org/ontology# PREFIX rdfs: http://www.w3.org/2000/01/rdf-schema# PREFIX skos: http://www.w3.org/2004/02/skos/core#\nSELECT DISTINCT ?hoard ?hoardID ?type (COALESCE(?tlabel, ?plabel, ?rlabel, ?flabel) AS ?typeLabel) (STR(?startDate) AS ?startYear) (STR(?endDate) AS ?endYear) ?denomination ?denominationLabel ?material ?materialLabel ?mint ?mintID ?hoardLat ?hoardLong ?mintLat ?mintLong WHERE { # — All CHRR hoards and their contents — ?hoard a nmo:Hoard ; dcterms:tableOfContents ?contents . FILTER(STRSTARTS(STR(?hoard), “http://numismatics.org/chrr/id/”)) BIND(REPLACE(STR(?hoard), “http://numismatics.org/chrr/id/”, ““) AS ?hoardID)\n# — Mint (via type-series item or directly on contents) — { ?contents nmo:hasTypeSeriesItem ?type . ?type nmo:hasMint ?mint . } UNION { ?contents nmo:hasMint ?mint . OPTIONAL { ?contents nmo:hasTypeSeriesItem ?type } } BIND(REPLACE(STR(?mint), “http://nomisma.org/id/”, ““) AS ?mintID)\n# — Type labels & dates (from CRRO type, when present) — OPTIONAL { ?type dcterms:title ?tlabel FILTER(LANG(?tlabel) = “” || LANGMATCHES(LANG(?tlabel), “en”)) } OPTIONAL { ?type skos:prefLabel ?plabel FILTER(LANG(?plabel) = “” || LANGMATCHES(LANG(?plabel), “en”)) } OPTIONAL { ?type rdfs:label ?rlabel FILTER(LANG(?rlabel) = “” || LANGMATCHES(LANG(?rlabel), “en”)) } OPTIONAL { ?type foaf:name ?flabel FILTER(LANG(?flabel) = “” || LANGMATCHES(LANG(?flabel), “en”)) }\nOPTIONAL { ?type nmo:hasStartDate ?startDate } OPTIONAL { ?type nmo:hasEndDate ?endDate }\n# — Denomination & material (from type) — OPTIONAL { ?type nmo:hasDenomination ?denomination . OPTIONAL { ?denomination (skos:prefLabel|rdfs:label|foaf:name) ?denominationLabel . FILTER(LANG(?denominationLabel) = “” || LANGMATCHES(LANG(?denominationLabel), “en”)) } } OPTIONAL { ?type nmo:hasMaterial ?material . OPTIONAL { ?material (skos:prefLabel|rdfs:label|foaf:name) ?materialLabel . FILTER(LANG(?materialLabel) = “” || LANGMATCHES(LANG(?materialLabel), “en”)) } }\n# — Mint geolocation (Nomisma places) — OPTIONAL { { ?mint geo:location [ geo:lat ?mintLat ; geo:long ?mintLong ] } UNION { ?mint geo:lat ?mintLat . ?mint geo:long ?mintLong } }\n# — Hoard geolocation (several fallbacks common in CHRR) — OPTIONAL { # A) Direct findspot place with geo { ?hoard nmo:hasFindspot ?hPlace . { ?hPlace geo:location [ geo:lat ?hoardLat ; geo:long ?hoardLong ] } UNION { ?hPlace geo:lat ?hoardLat . ?hPlace geo:long ?hoardLong } } UNION # B) CRM region chain with geo { ?hoard nmo:hasFindspot [ crm:P7_took_place_at [ crm:P89_falls_within ?region ] ] . ?region geo:location ?spatialThing . ?spatialThing geo:lat ?hoardLat ; geo:long ?hoardLong . } UNION # C) dcterms:spatial to a place with geo { ?hoard dcterms:spatial ?hPlace2 . { ?hPlace2 geo:location [ geo:lat ?hoardLat ; geo:long ?hoardLong ] } UNION { ?hPlace2 geo:lat ?hoardLat . ?hPlace2 geo:long ?hoardLong } } } } ORDER BY ?hoardID ?typeLabel ?type ?mint ```"
  },
  {
    "objectID": "coins01.html",
    "href": "coins01.html",
    "title": "Project - Brainstorming",
    "section": "",
    "text": "This project was a comprehensive analysis of the spatial distribution of coinage originating from various mints and subsequently deposited in hoards across the Roman world between approximately 500 BCE and 200 CE. By examining patterns in coin dispersal and quantifying the distances between points of minting and findspots, the study aimed to examine the broader dynamics of monetary circulation, and economic integration within the Roman economy. The ultimate objective was to generate insights into the mechanisms of coin movement and to contribute to our understanding of the structure and function of the ancient Roman economic system.\nThe first step that I’d like to look at is the probability of a coin existing in a certain location base on hoard finds.\nNote that there are several errors and mislabeled figures in this. This is for discussion purposes only."
  },
  {
    "objectID": "coins01.html#data-source",
    "href": "coins01.html#data-source",
    "title": "Project - Brainstorming",
    "section": "Data Source",
    "text": "Data Source\nFor the initial analysis, the data from the Coin Hoards of the Roman Republic was accessed. This dataset is based of the work of Crawford (1969), as enhanced by Gruber and Lockyear.\nThis data can be accessed via the website’s APIs or via the SPARQL endpoint at Nomisma. Not all hoards were appropriate for analysis. This initial analysis only included hoard findspots that had the following:\n\nGeolocation of hoard\nAt least 1 coin with a known mint\nKnown mint geolocation\n\nThe findspot information was mostly within a 5 kilometer radius of the findspot. Some was 10 km, but that was less often. For security reasons, the exact geolocation was never directly published to prevent theft and looting.\nFor now, all the findspots meeting the criteria were used, but this may be narrowed in the future."
  },
  {
    "objectID": "coins01.html#data-acquisition",
    "href": "coins01.html#data-acquisition",
    "title": "Project - Brainstorming",
    "section": "Data Acquisition",
    "text": "Data Acquisition\nTo acquire the data, first a list of all the hoards in the CHRR dataset was gathered from the SPARQL endpoint.\n\nPREFIX dcterms: &lt;http://purl.org/dc/terms/&gt;\nPREFIX nmo: &lt;http://nomisma.org/ontology#&gt;\n\nSELECT DISTINCT ?hoardID\nWHERE {\n  ?hoard a nmo:Hoard .\n  FILTER(STRSTARTS(STR(?hoard), \"http://numismatics.org/chrr/id/\"))\n  BIND(REPLACE(STR(?hoard), \"http://numismatics.org/chrr/id/\", \"\") AS ?hoardID)\n}\nORDER BY ?hoardID\n\nUsing the list of three digit hoard identifiers from this list, an R program was written to download all of the identified hoards using the schema:\n# ---- 3. Define File Formats and URI Templates ----\nformats &lt;- list(\n  xml     = \"http://numismatics.org/chrr/id/XXX\",\n  rdf     = \"https://numismatics.org/chrr/id/XXX.rdf\",\n  ttl     = \"https://numismatics.org/chrr/id/XXX.ttl\",\n  jsonld  = \"https://numismatics.org/chrr/id/XXX.jsonld\",\n  geojson = \"https://numismatics.org/chrr/id/XXX.geojson\"\n)\n‘XXX’ was replaced by the three digit hoard identifier.\nExample hoard identifier list:\n...\nAVO\nAVV\nAVZ\nAZA\nAZN\nAZU\n...\nAll of the RDF/XML, TTL, JSON-LD, and GeoJSON data were gathered for the hoards. The code for this is not included in this file.\nFrom this dataset, all the coin identifiers in the dataset were extracted. The URIs were in the form:\n\n# ---- 3. Define Format URIs ----\nformat_urls &lt;- list(\n  xml      = \"http://numismatics.org/crro/id/XXX.xml\",\n  rdf      = \"https://numismatics.org/crro/id/XXX.rdf\",\n  ttl      = \"https://numismatics.org/crro/id/XXX.ttl\",\n  jsonld   = \"https://numismatics.org/crro/id/XXX.jsonld\",\n  geojson  = \"https://numismatics.org/crro/id/XXX.geojson\",\n  manifest = \"http://numismatics.org/crro/manifest/XXX\"\n)\n\nThe coin ids, which replaced the XXX above, were in the form:\n...\nrrc-210.1\nrrc-214.1b\nrrc-232.1\nrrc-235.1c\nrrc-236.1a\nrrc-243.1\nrrc-247.1\nrrc-260.1\nrrc-270.1\n...\n\nAll of the RDF/XML, TTL, JSON-LD, and GeoJSON data were gathered for the hoards. The code for this is not included in this file.\nIn addition"
  },
  {
    "objectID": "coins01.html#data-processing",
    "href": "coins01.html#data-processing",
    "title": "Project - Brainstorming",
    "section": "Data Processing",
    "text": "Data Processing\nThe a sample of the initial set of data looks like:\n\n# Load the data\nhoards_df &lt;- read_csv(\"/Users/john/Library/Mobile Documents/com~apple~CloudDocs/Home/John/GIS/Roman Italy GIS/Coin Project/chrr_hoards/hoard_geojson/combined_hoards_with_distance.csv\")\n\nRows: 926 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): hoard_id, hoard_name, hoard_uri, hoard_geometry, mint_name, mint_ur...\ndbl (6): hoard_lat, hoard_lon, mint_average_count, mint_lat, mint_lon, mint_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Filter for Rome mint, take first 20 rows, keep all columns\nrome_subset &lt;- hoards_df %&gt;%\n  filter(mint_name == \"Rome\") %&gt;%\n  slice_head(n = 10)\n\n# Print as a nicely formatted table\nkable(rome_subset, caption = \"First 20 Hoards with Rome as Mint\")\n\n\nFirst 20 Hoards with Rome as Mint\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhoard_id\nhoard_name\nhoard_uri\nhoard_lat\nhoard_lon\nhoard_geometry\nmint_name\nmint_uri\nmint_average_count\nmint_lat\nmint_lon\nmint_geometry\nmint_hoard_distance_km\n\n\n\n\n1PO\nPoiana Crăcăoani (Romania)\nhttps://sws.geonames.org/670093/\n47.06667\n26.31667\nPOINT (26.31667 47.06667)\nRome\nhttp://nomisma.org/id/rome\n123\n41.9\n12.5\nPOINT (12.5 41.9)\n1236.48816\n\n\nABE\nAbertura (Spain)\nhttps://sws.geonames.org/2522486/\n39.24352\n-5.81394\nPOINT (-5.81394 39.24352)\nRome\nhttp://nomisma.org/id/rome\n23\n41.9\n12.5\nPOINT (12.5 41.9)\n1573.37081\n\n\nACT\nÁktion (Greece)\nhttps://sws.geonames.org/265389/\n38.94019\n20.76875\nPOINT (20.76875 38.94019)\nRome\nhttp://nomisma.org/id/rome\n3\n41.9\n12.5\nPOINT (12.5 41.9)\n773.90425\n\n\nADJ\nAmărăştii de Jos (Romania)\nhttps://sws.geonames.org/686386/\n43.95000\n24.16667\nPOINT (24.16667 43.95)\nRome\nhttp://nomisma.org/id/rome\n4\n41.9\n12.5\nPOINT (12.5 41.9)\n977.06559\n\n\nADM\nMassa d’Albe (Italy)\nhttps://sws.geonames.org/3173765/\n42.10723\n13.39429\nPOINT (13.39429 42.10723)\nRome\nhttp://nomisma.org/id/rome\n93\n41.9\n12.5\nPOINT (12.5 41.9)\n77.49022\n\n\nADR\nAlcalá del Río (Spain)\nhttps://sws.geonames.org/2522474/\n37.51780\n-5.98185\nPOINT (-5.98185 37.5178)\nRome\nhttp://nomisma.org/id/rome\n159\n41.9\n12.5\nPOINT (12.5 41.9)\n1652.39657\n\n\nADU\nAlbanchez de Mágina (Spain)\nhttps://sws.geonames.org/2522239/\n37.79263\n-3.46833\nPOINT (-3.46833 37.79263)\nRome\nhttp://nomisma.org/id/rome\n16\n41.9\n12.5\nPOINT (12.5 41.9)\n1436.74096\n\n\nAGG\nAggius (Italy)\nhttps://sws.geonames.org/3183443/\n40.92995\n9.06517\nPOINT (9.06517 40.92995)\nRome\nhttp://nomisma.org/id/rome\n10\n41.9\n12.5\nPOINT (12.5 41.9)\n306.37972\n\n\nAGN\nAgnona (Italy)\nhttps://sws.geonames.org/6693917/\n45.72602\n8.25957\nPOINT (8.25957 45.72602)\nRome\nhttp://nomisma.org/id/rome\n244\n41.9\n12.5\nPOINT (12.5 41.9)\n545.19648\n\n\nAID\nAidóna (Greece)\nhttps://sws.geonames.org/265542/\n39.60542\n21.46797\nPOINT (21.46797 39.60542)\nRome\nhttp://nomisma.org/id/rome\n4\n41.9\n12.5\nPOINT (12.5 41.9)\n797.75946\n\n\n\n\n\nThis is limited only to hoards with coins from the Rome mint, and the distance is crudely calculated as the great circle distance. We expect to use ORBIS to more accurately model transportation networks and distances.\nThere is more granular data that includes Terminus Ante Quem (closing date), specific coin types and authorities, and dates. This has not yet been combined into the data set.\nIt is expected that there would be some spatial autocorrelation of the data since there is the expectation that coins would not be distributed along whatever routes they took to their final destination in the hoard."
  },
  {
    "objectID": "coins01.html#mints",
    "href": "coins01.html#mints",
    "title": "Project - Brainstorming",
    "section": "Mints",
    "text": "Mints"
  },
  {
    "objectID": "coins01.html#all-hoard-findspots",
    "href": "coins01.html#all-hoard-findspots",
    "title": "Project - Brainstorming",
    "section": "All Hoard Findspots",
    "text": "All Hoard Findspots"
  },
  {
    "objectID": "coins01.html#spatial-autocorrelation",
    "href": "coins01.html#spatial-autocorrelation",
    "title": "Project - Brainstorming",
    "section": "Spatial Autocorrelation",
    "text": "Spatial Autocorrelation\n\n\nRows: 926 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): hoard_id, hoard_name, hoard_uri, hoard_geometry, mint_name, mint_ur...\ndbl (6): hoard_lat, hoard_lon, mint_average_count, mint_lat, mint_lon, mint_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nData Quality Summary:\n\n\nTotal hoards: 486 \n\n\nPresence distribution:\n\n\n\n  0   1 \n  3 483 \n\n\nMissing coordinates: 0 \n\n\nProportion with Rome mint presence: 0.994 \n\n\n\nTesting multiple distance thresholds:\n\n\nWarning in dnearneigh(coords, d1 = 0, d2 = dist): neighbour object has 84\nsub-graphs\n\n\nWarning in dnearneigh(coords, d1 = 0, d2 = dist): neighbour object has 49\nsub-graphs\n\n\nWarning in dnearneigh(coords, d1 = 0, d2 = dist): neighbour object has 28\nsub-graphs\n\n\nWarning in dnearneigh(coords, d1 = 0, d2 = dist): neighbour object has 16\nsub-graphs\n\n\nWarning in dnearneigh(coords, d1 = 0, d2 = dist): neighbour object has 13\nsub-graphs\n\n\n  distance_km moran_i p_value islands avg_neighbors\n1         100      NA      NA      58            NA\n2         150      NA      NA      29            NA\n3         200      NA      NA      15            NA\n4         250      NA      NA      11            NA\n5         300      NA      NA      10            NA\n\n\nWarning in dnearneigh(coords, d1 = 0, d2 = optimal_distance): neighbour object\nhas 28 sub-graphs\n\n\n\nSpatial neighborhood summary:\n\n\nDistance threshold: 200 km\n\n\nNumber of points with no neighbors: 15 \n\n\nAverage number of neighbors: 23.66 \n\n\nRange of neighbors: 0 - 56 \n\n\n\nGlobal Moran's I Results:\n\n\nRow-standardized weights:\n\n\n\n    Moran I test under randomisation\n\ndata:  rome_proj$presence  \nweights: lw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 0.83075, p-value = 0.2031\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.0123304614     -0.0021276596      0.0003028863 \n\n\n\nBinary weights:\n\n\n\n    Moran I test under randomisation\n\ndata:  rome_proj$presence  \nweights: lw_binary  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 1.5754, p-value = 0.05758\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.0141599037     -0.0021276596      0.0001068888 \n\n\n\nComputing Local Moran's I...\n\n\n\nCluster Summary (original p-values):\n\n\n\n       High-Low         Low-Low Not significant \n             33               2             451 \n\n\n\nCluster Summary (FDR-adjusted p-values):\n\n\n\n       High-Low Not significant \n             20             466 \n\n\n\nSignificance levels:\n\n\n\nNot significant        p &lt; 0.01        p &lt; 0.05 \n            451              23              12 \n\n\nℹ tmap mode set to \"view\".\nℹ tmap mode set to \"view\".\n\n\n\n\n\n\n\nMultiple palettes called \"gray\" found: \"matplotlib.gray\", \"tableau.gray\". The first one, \"matplotlib.gray\", is returned.\nMultiple palettes called \"gray\" found: \"matplotlib.gray\", \"tableau.gray\". The first one, \"matplotlib.gray\", is returned.\n\n\n\n\n\n\n\n\n\n\nAlternative analysis with k-nearest neighbors:\n\n\nWarning in knearneigh(coords, k = k): knearneigh: identical points found\n\n\nWarning in knearneigh(coords, k = k): knearneigh: kd_tree not available for\nidentical points\n\n\nWarning in knearneigh(coords, k = k): knearneigh: identical points found\n\n\nWarning in knearneigh(coords, k = k): knearneigh: kd_tree not available for\nidentical points\n\n\nWarning in knearneigh(coords, k = k): knearneigh: identical points found\n\n\nWarning in knearneigh(coords, k = k): knearneigh: kd_tree not available for\nidentical points\n\n\nWarning in knearneigh(coords, k = k): knearneigh: identical points found\n\n\nWarning in knearneigh(coords, k = k): knearneigh: kd_tree not available for\nidentical points\n\n\n                    k      moran_i   p_value\nMoran I statistic   6 -0.007936508 0.6165404\nMoran I statistic1  8 -0.009316770 0.6642648\nMoran I statistic2 10 -0.008695652 0.6677864\nMoran I statistic3 12 -0.008626639 0.6811293\n\n\n\nDiagnostics:\n\n\nDistribution of presence variable:\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  1.0000  1.0000  0.9938  1.0000  1.0000 \n\n\n\nLocal Moran's I statistics summary:\n\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-1.000000  0.006211  0.006211  0.012330  0.006211  4.225806 \n\n\n\nSignificant clusters by type:\n\n\n\nHigh-Low  Low-Low \n      33        2"
  },
  {
    "objectID": "coins01.html#kriging-probability-surface",
    "href": "coins01.html#kriging-probability-surface",
    "title": "Project - Brainstorming",
    "section": "Kriging / probability surface",
    "text": "Kriging / probability surface\nThis is not functional. I have developed some code but it does not work well.\nI am trying to use indicator Kriging, but I am running into trouble excuting the analysis. I only have places that have coins, and a few that don’t have coins from the Rome mint. I don’t think I have enough data."
  },
  {
    "objectID": "coins01.html#distance-decay",
    "href": "coins01.html#distance-decay",
    "title": "Project - Brainstorming",
    "section": "Distance Decay",
    "text": "Distance Decay\n\n# Roman Coin Probability Surface Analysis with Hex Binning\n# Load required libraries\nlibrary(sf)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(viridis)\n\nLoading required package: viridisLite\n\n# Try to load optional basemap packages\nbasemap_packages &lt;- c(\"rnaturalearth\", \"rnaturalearthdata\", \"maps\")\navailable_packages &lt;- sapply(basemap_packages, function(pkg) {\n  suppressWarnings(require(pkg, character.only = TRUE, quietly = TRUE))\n})\n\n\nAttaching package: 'maps'\n\n\nThe following object is masked from 'package:viridis':\n\n    unemp\n\nif(!any(available_packages)) {\n  warning(\"No basemap packages available. Install 'rnaturalearth' or 'maps' for geographic context.\")\n}\n\n# Resolve potential conflicts\nselect &lt;- dplyr::select\nfilter &lt;- dplyr::filter\nmutate &lt;- dplyr::mutate\n\n# Read and prepare data\ndata &lt;- readr::read_csv(\"/Users/john/Library/Mobile Documents/com~apple~CloudDocs/Home/John/GIS/Roman Italy GIS/Coin Project/chrr_hoards/hoard_geojson/combined_hoards_with_distance.csv\")\n\nRows: 926 Columns: 13\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): hoard_id, hoard_name, hoard_uri, hoard_geometry, mint_name, mint_ur...\ndbl (6): hoard_lat, hoard_lon, mint_average_count, mint_lat, mint_lon, mint_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Focus on Rome mint only\nrome_data &lt;- data %&gt;%\n  dplyr::filter(mint_name == \"Rome\") %&gt;%\n  dplyr::select(hoard_id, hoard_name, hoard_lat, hoard_lon, \n                mint_average_count, mint_hoard_distance_km)\n\n# Convert findspots to spatial points\nfindspots_sf &lt;- st_as_sf(rome_data, \n                         coords = c(\"hoard_lon\", \"hoard_lat\"), \n                         crs = 4326)\n\n# Create hexagonal grid function\ncreate_hex_grid &lt;- function(bbox, hex_size_km = 75) {\n  # Convert to projected CRS for equal area hexagons (Europe-focused)\n  bbox_proj &lt;- st_transform(st_as_sfc(bbox), crs = 3035)\n  \n  # Create hex grid\n  hex_grid &lt;- st_make_grid(bbox_proj, \n                           cellsize = hex_size_km * 1000, # convert to meters\n                           square = FALSE) # hexagonal\n  \n  # Convert back to WGS84 and add IDs\n  hex_grid &lt;- st_sf(hex_id = 1:length(hex_grid), \n                    geometry = st_transform(hex_grid, crs = 4326))\n  return(hex_grid)\n}\n\n# Create study area bounding box (expand around findspots)\nbbox &lt;- st_bbox(findspots_sf)\nbbox_expanded &lt;- bbox + c(-2, -2, 2, 2)  # expand by 2 degrees\nstudy_area &lt;- st_as_sfc(st_bbox(bbox_expanded, crs = st_crs(findspots_sf)))\n\n# Create hex grid\nhex_grid &lt;- create_hex_grid(bbox_expanded, hex_size_km = 75)\n\n# Spatial join: assign each findspot to a hex\nfindspots_hex &lt;- st_join(findspots_sf, hex_grid)\n\n# Aggregate data by hex\nhex_summary &lt;- findspots_hex %&gt;%\n  sf::st_drop_geometry() %&gt;%\n  dplyr::group_by(hex_id) %&gt;%\n  dplyr::summarise(\n    total_coins = sum(mint_average_count, na.rm = TRUE),\n    n_findspots = n(),\n    avg_distance_to_rome = mean(mint_hoard_distance_km, na.rm = TRUE),\n    .groups = 'drop'\n  )\n\n# Join aggregated data back to hex grid\nhex_grid &lt;- hex_grid %&gt;%\n  dplyr::left_join(hex_summary, by = \"hex_id\") %&gt;%\n  dplyr::mutate(\n    total_coins = ifelse(is.na(total_coins), 0, total_coins),\n    has_findspots = !is.na(n_findspots)\n  )\n\n# Calculate distance from each hex centroid to Rome\nrome_coords &lt;- st_sfc(st_point(c(12.5, 41.9)), crs = 4326)\n\nhex_grid &lt;- hex_grid %&gt;%\n  dplyr::mutate(\n    dist_to_rome = as.numeric(sf::st_distance(sf::st_centroid(.), rome_coords)) / 1000\n  )\n\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `dist_to_rome = as.numeric(sf::st_distance(sf::st_centroid(.),\n  rome_coords))/1000`.\nCaused by warning:\n! st_centroid assumes attributes are constant over geometries\n\n# Fit distance decay model using hexes with actual data\nmodel_data &lt;- hex_grid %&gt;%\n  dplyr::filter(has_findspots == TRUE & total_coins &gt; 0) %&gt;%\n  sf::st_drop_geometry()\n\n# Check if we have enough data for modeling\nif(nrow(model_data) &lt; 3) {\n  stop(\"Not enough data points for modeling. Need at least 3 hexes with coin data.\")\n}\n\n# Fit exponential decay model\n# Try different starting parameters if the first attempt fails\ntryCatch({\n  decay_model &lt;- nls(total_coins ~ a * exp(-b * dist_to_rome), \n                     data = model_data,\n                     start = list(a = max(model_data$total_coins), b = 0.001))\n}, error = function(e) {\n  # Alternative: simple linear model on log scale\n  decay_model &lt;- lm(log(total_coins + 1) ~ dist_to_rome, data = model_data)\n})\n\n# Predict for all hexes\nif(class(decay_model)[1] == \"nls\") {\n  hex_grid$predicted_coins &lt;- predict(decay_model, \n                                      newdata = data.frame(dist_to_rome = hex_grid$dist_to_rome))\n} else {\n  # For linear model, back-transform predictions\n  hex_grid$predicted_coins &lt;- exp(predict(decay_model, \n                                          newdata = data.frame(dist_to_rome = hex_grid$dist_to_rome))) - 1\n}\n\n# Create probability surface (normalize to 0-1)\nhex_grid$probability &lt;- pmax(0, hex_grid$predicted_coins) / max(pmax(0, hex_grid$predicted_coins))\n\n# Combine observed and predicted values\nhex_grid$final_coins &lt;- ifelse(hex_grid$has_findspots, \n                               hex_grid$total_coins, \n                               hex_grid$predicted_coins)\n\nhex_grid$final_probability &lt;- hex_grid$final_coins / max(hex_grid$final_coins)\n\n# Get basemap data (with error handling)\nworld &lt;- NULL\nbasemap_available &lt;- FALSE\n\n# Try Natural Earth first\nif(available_packages[\"rnaturalearth\"]) {\n  tryCatch({\n    world &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")\n    basemap_available &lt;- TRUE\n  }, error = function(e) {\n    message(\"Natural Earth data not available, trying maps package...\")\n  })\n}\n\n# Try maps package as fallback\nif(!basemap_available && available_packages[\"maps\"]) {\n  tryCatch({\n    world_map &lt;- maps::map(\"world\", fill = TRUE, plot = FALSE)\n    world &lt;- sf::st_as_sf(world_map)\n    basemap_available &lt;- TRUE\n  }, error = function(e) {\n    message(\"Maps package not working, proceeding without basemap...\")\n  })\n}\n\n# Create study area boundary for clipping\nstudy_bbox &lt;- sf::st_bbox(hex_grid)\nstudy_area_poly &lt;- sf::st_as_sfc(study_bbox)\n\n# Create visualization with optional basemap\nif(basemap_available) {\n  p1 &lt;- ggplot() +\n    # Add basemap first\n    geom_sf(data = world, fill = \"grey90\", color = \"grey95\", size = 0.2) +\n    # Add hex grid\n    geom_sf(data = hex_grid, aes(fill = final_probability), \n            color = \"white\", size = 0.1, alpha = 0.8) +\n    scale_fill_viridis_c(name = \"Coin\\nProbability\", \n                         trans = \"sqrt\",\n                         option = \"turbo\",\n                         labels = scales::percent) +\n    # Add findspot points\n    geom_sf(data = findspots_sf, size = 1, alpha = 0.9, color = \"white\") +\n    # Add Rome\n    geom_sf(data = rome_coords, size = 4, color = \"red\", shape = 18) +\n    # Set map extent to study area\n    coord_sf(xlim = c(study_bbox[\"xmin\"], study_bbox[\"xmax\"]),\n             ylim = c(study_bbox[\"ymin\"], study_bbox[\"ymax\"]),\n             expand = FALSE) +\n    theme_void() +\n    theme(\n      legend.position = \"right\",\n      plot.title = element_text(size = 14, hjust = 0.5),\n      plot.subtitle = element_text(size = 12, hjust = 0.5),\n      panel.background = element_rect(fill = \"lightblue\", color = NA)\n    ) +\n    labs(title = \"Probability Surface for Roman Coins\",\n         subtitle = \"Hexagonal binning with distance decay model from Rome\")\n} else {\n  # Fallback map without basemap\n  p1 &lt;- ggplot(hex_grid) +\n    geom_sf(aes(fill = final_probability), color = \"white\", size = 0.1) +\n    scale_fill_viridis_c(name = \"Coin\\nProbability\", \n                         trans = \"sqrt\",\n                         option = \"turbo\",\n                         labels = scales::percent) +\n    geom_sf(data = findspots_sf, size = 1, alpha = 0.8, color = \"white\") +\n    geom_sf(data = rome_coords, size = 4, color = \"red\", shape = 18) +\n    theme_void() +\n    theme(\n      legend.position = \"right\",\n      plot.title = element_text(size = 14, hjust = 0.5),\n      plot.subtitle = element_text(size = 12, hjust = 0.5)\n    ) +\n    labs(title = \"Probability Surface for Roman Coins\",\n         subtitle = \"Hexagonal binning with distance decay model from Rome\",\n         caption = \"Note: Install 'rnaturalearth' or 'maps' package for geographic context\")\n}\n\nprint(p1)\n\n\n\n\n\n\n\n# Create enhanced version if basemap is available\nif(basemap_available) {\n  p1_labeled &lt;- ggplot() +\n    # Add basemap\n    geom_sf(data = world, fill = \"grey90\", color = \"grey95\", size = 0.2) +\n    # Add hex grid\n    geom_sf(data = hex_grid, aes(fill = final_probability), \n            color = \"white\", size = 0.1, alpha = 0.8) +\n    scale_fill_viridis_c(name = \"Coin\\nProbability\", \n                         trans = \"sqrt\",\n                         option = \"plasma\",\n                         labels = scales::percent) +\n    # Add findspot points\n    geom_sf(data = findspots_sf, size = 1.2, alpha = 0.9, color = \"white\") +\n    # Add Rome with label\n    geom_sf(data = rome_coords, size = 4, color = \"red\", shape = 18) +\n    annotate(\"text\", x = 12.5, y = 41.2, label = \"Rome\", \n             color = \"red\", fontface = \"bold\", size = 3) +\n    # Set map extent\n    coord_sf(xlim = c(study_bbox[\"xmin\"], study_bbox[\"xmax\"]),\n             ylim = c(study_bbox[\"ymin\"], study_bbox[\"ymax\"]),\n             expand = FALSE) +\n    theme_void() +\n    theme(\n      legend.position = \"right\",\n      plot.title = element_text(size = 14, hjust = 0.5),\n      plot.subtitle = element_text(size = 12, hjust = 0.5),\n      panel.background = element_rect(fill = \"lightblue\", color = NA)\n    ) +\n    labs(title = \"Roman Coin Distribution Probability\",\n         subtitle = \"Based on distance decay modeling from Rome\",\n         caption = \"White dots = Coin findspots | Red diamond = Rome\")\n  \n  print(p1_labeled)\n}\n\n\n\n\n\n\n\n# Summary statistics\ncat(\"Analysis Summary:\\n\")\n\nAnalysis Summary:\n\ncat(\"=================\\n\")\n\n=================\n\ncat(\"Total findspots:\", nrow(findspots_sf), \"\\n\")\n\nTotal findspots: 486 \n\ncat(\"Total coins from Rome:\", sum(rome_data$mint_average_count), \"\\n\")\n\nTotal coins from Rome: NA \n\ncat(\"Hexes with data:\", sum(hex_grid$has_findspots, na.rm = TRUE), \"\\n\")\n\nHexes with data: 229 \n\ncat(\"Total hexes:\", nrow(hex_grid), \"\\n\")\n\nTotal hexes: 5000 \n\ncat(\"Max distance to Rome:\", round(max(hex_grid$dist_to_rome), 2), \"km\\n\")\n\nMax distance to Rome: 4372.11 km\n\ncat(\"Min distance to Rome:\", round(min(hex_grid$dist_to_rome), 2), \"km\\n\")\n\nMin distance to Rome: 17.74 km\n\n# Model diagnostics\nif(class(decay_model)[1] == \"nls\") {\n  cat(\"\\nDistance Decay Model (Exponential):\\n\")\n  cat(\"===================================\\n\")\n  print(summary(decay_model))\n} else {\n  cat(\"\\nDistance Decay Model (Linear on log scale):\\n\")\n  cat(\"==========================================\\n\")\n  print(summary(decay_model))\n}\n\n\nDistance Decay Model (Exponential):\n===================================\n\nFormula: total_coins ~ a * exp(-b * dist_to_rome)\n\nParameters:\n   Estimate Std. Error t value Pr(&gt;|t|)    \na 2.013e+03  3.304e+02   6.092 4.72e-09 ***\nb 2.583e-03  4.720e-04   5.473 1.17e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 814.1 on 227 degrees of freedom\n\nNumber of iterations to convergence: 7 \nAchieved convergence tolerance: 9.615e-06\n\n# Create distance vs coins plot\np2 &lt;- ggplot(model_data, aes(x = dist_to_rome, y = total_coins)) +\n  geom_point(alpha = 0.7, size = 2) +\n  geom_smooth(method = \"loess\", se = TRUE, color = \"red\") +\n  scale_y_log10() +\n  labs(title = \"Distance Decay Relationship\",\n       x = \"Distance to Rome (km)\",\n       y = \"Total Coins (log scale)\") +\n  theme_minimal()\n\nprint(p2)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Export results (optional)\n# hex_results &lt;- hex_grid %&gt;%\n#   dplyr::select(hex_id, dist_to_rome, total_coins, predicted_coins, \n#          final_probability, has_findspots) %&gt;%\n#   sf::st_drop_geometry()\n# \n# readr::write_csv(hex_results, \"roman_coin_probability_results.csv\")"
  }
]